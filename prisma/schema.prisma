datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  // previewFeatures = []
}

generator dbml {
  provider = "prisma-dbml-generator"
}

// Tables For Distribution Channel 

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  password  String
  name      String
  role      Role?
}

model ApplicationForDistributionSystem {
  id               String        @id @default(cuid())
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  status           STATUS?
  name             String
  email            String
  mobileNumber     String
  applicantAddress String
  applicantType    ApplicantType
  firmName         String
  State            String
  District         String
  extraInfo        String?
}

enum Role {
  ADMIN
  HR
  SALES
  EXECUTIVE
  
}

enum STATUS {
  PENDING
  ACCEPT
  REJECT
}

enum ApplicantType {
  DISTRIBUTOR
  STOCKIST
}

// Tables for Project Submission Data 

model Project {
  id                     String   @id @default(cuid())
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
  name                   String
  email                  String?
  Country                String?
  State                  String?
  City                   String?
  mobileNumber           String?
  dob                    String?
  occupation             String?
  director               String[]
  yourProjectType        String?
  youAre                 String?
  typeOfPartnership      String?
  fundingType            String?
  receivingMode          String?
  goal                   String?
  targetFor              String?
  perPersonAmount        String?
  yourProjectTitle       String?
  brief                  String?
  marketProblem          String?
  solution               String?
  yourProduct            String?
  businessModel          String?
  sizeOfMarket           String?
  currentTransaction     String?
  competitiveLandscape   String?
  financialProjection    String?
  fundNeed               String?
  equityStructure        String?
  exitOption             String?
  selectFundingType      String?
  fundingStage           String?
  selectFundingTypeAgain String?
  fundingAmount          String?
  fundingDate            String?
  linkedinProfile        String?
  twitterProfile         String?
  facebookProfile        String?
  instagramProfile       String?
  websiteURL             String?
  thanksNote             String?
}

// model ProjectDataFields{
//   id            String   @id @default(cuid())
//   createdAt          DateTime @default(now())
//   updatedAt          DateTime @updatedAt
//   projectData   Project?   @relation(fields: [projectId], references: [id])
//   projectId     String

//   fieldName     String
//   fieldValue    String 
// }

//  Contact us Details

model ContactusResponse {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  id        String   @id @default(cuid())
  name      String
  email     String
  company   String?
  Subject   String?
  message   String?
}
